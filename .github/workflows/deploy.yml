name: "CI test for main"

permissions:
  contents: read
  pull-requests: read

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-test-deploy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - run: npm ci
      - run: npm run build
      - run: npm test

      - name: Write secrets to files for Docker Compose
        run: |
          mkdir -p docker_secrets
          echo "${{ secrets.CLASSCODE }}" > docker_secrets/classcode.txt
          echo "${{ secrets.DB_HOST }}" > docker_secrets/db_host.txt
          echo "${{ secrets.DB_NAME }}" > docker_secrets/db_name.txt
          echo "${{ secrets.DB_PASSWORD }}" > docker_secrets/db_password.txt
          echo "${{ secrets.DB_USER }}" > docker_secrets/db_user.txt
          echo "${{ secrets.DSB_ACTIVATED }}" > docker_secrets/dsb_activated.txt
          echo "${{ secrets.DSB_PASSWORD }}" > docker_secrets/dsb_password.txt
          echo "${{ secrets.DSB_USER }}" > docker_secrets/dsb_user.txt
          echo "${{ secrets.REDIS_PORT }}" > docker_secrets/redis_port.txt
          echo "${{ secrets.SESSION_SECRET }}" > docker_secrets/session_secret.txt
          echo "${{ secrets.UNSAFE_DEACTIVATE_CSP }}" > docker_secrets/unsafe_deactivate_csp.txt

      - name: Build Docker Compose
        run: docker compose build
